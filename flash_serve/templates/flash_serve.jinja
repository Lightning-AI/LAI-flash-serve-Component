from {{ task_import_path }} import {{ task_class }}

import threading


class ModelThread(threading.Thread):
    def __init__(self, model, host, port):
        super().__init__(daemon=True)
        self._exit_event = threading.Event()
        self._sleep_time = 0.5
        self.host = host
        self.port = port
        self.model = model

    def run(self):
        try:
            while not self._exit_event.is_set():
                self._exit_event.wait(self._sleep_time)
                self.run_once()
        except Exception as e:
            raise e

    def run_once(self):
        self.model.serve(host=str(self.host), port=self.port, sanity_check=False)

    def join(self, timeout = None):
        self._exit_event.set()
        super().join(timeout)


ready = False
model = {{ task_class }}.load_from_checkpoint("{{ checkpoint_path }}")
model = ModelThread(model, "{{ host }}", {{ port }})
model.start()
ready = True