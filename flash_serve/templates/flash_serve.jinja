from {{ task_import_path }} import {{ task_class }}

import threading

class ModelThread(threading.Thread):
    def __init__(self, task_cls, ckpt_path, host, port):
        super().__init__(daemon=True)
        self._exit_event = threading.Event()
        self._sleep_time = 0.5
        self.ckpt_path = ckpt_path
        self.task_cls = task_cls
        self.host = host
        self.port = port

    def run(self):
        try:
            while not self._exit_event.is_set():
                self._exit_event.wait(self._sleep_time)
                self.run_once()
        except Exception as e:
            raise e

    def run_once(self):
        model = self.task_cls.load_from_checkpoint(self.ckpt_path)
        model.serve(host=str(self.host), port=self.port, sanity_check=False)

    def join(self, timeout = None):
        self._exit_event.set()
        super().join(timeout)

ready = False
model = ModelThread({{ task_class }}, "{{ checkpoint_path }}", "{{ host }}", {{ port }})
model.start()
ready = True